apiVersion: v1
kind: Secret
metadata:
  name: keycloak
  namespace: keycloak
type: Opaque
data:
  KC_HOSTNAME: a2V5Y2xvYWsuaW5zcGlyZS13YXIuc2hvcA==
  KEYCLOAK_ADMIN: YWRtaW4=
  KEYCLOAK_ADMIN_PASSWORD: MXFhMndzIUA=
  KC_DB: a2V5Y2xvYWs=
  KC_DB_URL: amRiYzpwb3N0Z3Jlc3FsOi8vaGNzLXBvYy1yZHMta2V5Y2xvYWstcG9jLmNqaXFmOGFqbDh4dS5hcC1ub3J0aGVhc3QtMi5yZHMuYW1hem9uYXdzLmNvbS9rZXljbG9haw==
  KC_DB_USERNAME: a2V5Y2xvYWs=
  KC_DB_PASSWORD: MXFhMndzIVA=
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
  namespace: keycloak
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  namespace: keycloak
  annotations:
    #kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    #alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/load-balancer-name: keycloak-alb-ingress
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/success-codes: "200-399"
    external-dns.alpha.kubernetes.io/hostname: "keycloak.inspire-war.shop"
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:446805103418:certificate/e93c75b9-7009-42c3-9aae-93cd5083be2a
  labels:
    app: keycloak
spec:
  ingressClassName: alb
  tls:
    - hosts:
        - "keycloak.inspire-war.shop"
  rules:
    - host: "keycloak.inspire-war.shop"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
  namespace: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:18.0.0
          #image: quay.io/keycloak/keycloak:25.0
          args: ["start-dev"]
          env:
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "1qa2ws!@"
            - name: KC_PROXY
              value: "edge"
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: DB_VENDOR
              value: POSTGRES
            - name: DB_ADDR
              value: postgres
            - name: DB_DATABASE
              value: keycloak
            - name: DB_USER
              value: a2V5Y2xvYWs=
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak
                  key: KC_DB_PASSWORD
            - name: KEYCLOAK_HTTP_PORT
              value: "8080"
            - name: KEYCLOAK_HOSTNAME
              value: keycloak.inspire-war.shop #replace with ingress URL
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: keycloak-persistent-storage
              mountPath: "/opt/jboss/keycloak/startup/elements"
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
      volumes:
        - name: keycloak-persistent-storage
          persistentVolumeClaim:
            claimName: keycloak-pvc-development
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-pvc-development
  namespace: keycloak
spec:
  accessModes:
    #- ReadWriteOnce
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 10Gi
